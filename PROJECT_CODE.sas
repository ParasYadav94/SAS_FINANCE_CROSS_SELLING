
/*--------------------------CROSS-SELL PROJECT CODE ---------------------------------------*/

/* PROBLEM STATEMENT:- TO FIND OUT WHICH CUSTOMERS ARE MORE LIKELY TO BUY CROSS-SELL PRODUCTS 
(PERMANENET DISABILITY INSURANCE WITH A LOW MONTHLY PREMIUM.)
HENCE THE DEPENDENT VARIABLE :- 'INS' */

/* STEP 1: CREATING THE LIBRARY FOR THE DATSET */
LIBNAME LOGISTIC "C:\Documents and Settings\STD\Desktop\SAS PROJECT\";
RUN;

/* STEP 2: IMPORTING THE DATASET */
PROC IMPORT OUT= LOGISTIC.CROSS 
            DATAFILE= "C:\Documents and Settings\STD\Desktop\SAS PROJECT\Cross Sell.csv" 
            DBMS=CSV REPLACE;
     GETNAMES=YES;
     DATAROW=2; 
RUN;

/* STEP 3=> PART 1: FINECLASSING FOR CATEGORICAL VARIABLE*/

%MACRO FINE_CLASS (DSN,DEPVAR,TOT_RESP,TOT_NRESP,CLASS_VAR,GRPS);                                                                             
PROC SQL;
CREATE TABLE FINE_CLASSED AS SELECT
COUNT(*) AS NOBS,
MIN(&CLASS_VAR.) AS MIN_VAL,
MAX(&CLASS_VAR.) AS MAX_VAL,
SUM(CASE WHEN &DEPVAR. = 1 THEN 1 ELSE 0 END) AS RESP,
SUM(CASE WHEN &DEPVAR. = 0 THEN 1 ELSE 0 END) AS NRESP

FROM &DSN

GROUP BY &CLASS_VAR;
QUIT;

DATA FINE_CLASSED1;
SET FINE_CLASSED;
TOT_RESP=&TOT_RESP.;
TOT_NRESP=&TOT_NRESP.;
WOE=LOG(((RESP/TOT_RESP)+0.000000001)/((NRESP/TOT_nRESP)+0.000000001));
IV=((RESP/TOT_RESP)-(NRESP/TOT_NRESP))*WOE*100;
RUN;

PROC PRINT DATA = FINE_CLASSED1;RUN;
/*PROC DELETE DATA =  FINE_CLASSED1;*/
/*PROC DELETE DATA = FINE_CLASSED;*/
/*PROC DELETE DATA = BIN_DSN;RUN;*/
%MEND;


/* STEP 3=> PART 2: FINECLASSING FOR CONTINUOUS VARIABLES */
%MACRO FINE_CLASS (DSN,DEPVAR,TOT_RESP,TOT_NRESP,CLASS_VAR,GRPS);                                                                             

PROC RANK DATA =&DSN. GROUPS=&GRPS. OUT=BIN_DSN;                                                                                                
VAR &CLASS_VAR.;
RANKS BIN;
RUN;

PROC SQL;
CREATE TABLE FINE_CLASSED AS SELECT
COUNT(*) AS NOBS,
MIN(&CLASS_VAR.) AS MIN_VAL,
MAX(&CLASS_VAR.) AS MAX_VAL,
SUM(CASE WHEN &DEPVAR. = 1 THEN 1 ELSE 0 END) AS RESP,
SUM(CASE WHEN &DEPVAR. = 0 THEN 1 ELSE 0 END) AS NRESP

FROM BIN_DSN

GROUP BY BIN;
QUIT;

DATA FINE_CLASSED1;
SET FINE_CLASSED;
TOT_RESP=&TOT_RESP.;
TOT_NRESP=&TOT_NRESP.;
WOE=LOG(((RESP/TOT_RESP)+0.000000001)/((NRESP/TOT_nRESP)+0.000000001));
IV=((RESP/TOT_RESP)-(NRESP/TOT_NRESP))*WOE*100;
RUN;

PROC PRINT DATA = FINE_CLASSED1;RUN;
/*PROC DELETE DATA =  FINE_CLASSED1;*/
/*PROC DELETE DATA = FINE_CLASSED;*/
/*PROC DELETE DATA = BIN_DSN;RUN;*/

%MEND;


/* COUNTING THE ROWS WITH THE DEPENDENT VARIABLE AS 1 IN the DATASET */
PROC SQL;
CREATE TABLE Logistic.L AS SELECT * FROM Logistic.Cross;
SELECT COUNT (*) FROM Logistic.L WHERE INS=1;
QUIT; /* COUNT = 11175 */

/* COUNTING THE ROWS WITH THE DEPENDENT VARIABLE AS 0 IN THE DATASET*/
PROC SQL;
CREATE TABLE Logistic.L AS SELECT * FROM Logistic.Cross;
SELECT COUNT (*) FROM Logistic.L WHERE INS=0;
QUIT; /* COUNT = 21089 */

/* DSN- data set name
DEPVAR – dependent variable
TOT_RESP – for how many observations, the value of the dependent variable is 1
TOT_NRESP – for how many observations, the value of the dependent variable is 0
CLASS_VAR – The independent var for which you are calling the macro
GRPS – groups as 10	
SYNTAX:- 

%FINE_CLASS (DSN,DEPVAR,TOT_RESP,TOT_NRESP,CLASS_VAR,GRPS);	 */

/*CHECKING FOR THE IV VALUES FOR EACH VARIABLE */

ODS HTML FILE="C:\Documents and Settings\STD\Desktop\SAS PROJECT\IV_VALUES.XLS";
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,ACCTAGE,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,DDABal,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,CashBk,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,Checks,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,NSFAmt,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,Phone,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,Teller,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,SavBal,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,ATMAmt,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,POS,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,POSAmt,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,CDBal,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,IRABal,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,LOCBal,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,ILSBal,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,MMBal,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,MMCred,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,MTGBal,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,CCBal,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,CCPurc,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,Income,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,LORes,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,HMVal,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,Age,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,CRScore,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,Branch,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,Res,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,Dep,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,DepAmt,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,InvBal,10); 
ODS HTML CLOSE;

/* RE-CALLING THE MACRO ONLY FOR THE VARIABLES WITH IV-VALUE BETWEEN 0.1-0.5 */

ODS HTML FILE="C:\Documents and Settings\STD\Desktop\SAS PROJECT\FINAL_IV.XLS";
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,DDABAL,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,SAVBAL,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,ATMAmt,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,CDBAL,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,MMBAL,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,AGE,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,DEP,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,DEPAMT,10);
%FINE_CLASS(LOGISTIC.CROSS,INS,11175,21089,PHONE,10); 
ODS HTML CLOSE;

/* COARSE CLASSING FOR SELECTED VARIABLES */
/* CHECKING THE MISSING VALUES FOR ALL VARIABLES */
PROC MEANS DATA= LOGISTIC.CROSS NMISS;RUN;
/* MISSING VALUES TREATMENT FOR VARIABLES WHICH HAVE VALID IV-VALUEs */

/* CREATING A NEW COLUMN WITH THE NEW WOE VARIABLE */
DATA logistic.Cross;
SET logistic.Cross;
/* DDABAL */
IF DDABAL>= -774.83 AND DDABAL<=315.66 THEN DDABAL_WOE= -0.0128619;
IF DDABAL>=315.71 AND DDABAL<=1441.3 THEN DDABAL_WOE= -0.0567687;
IF DDABAL>=1441.34 AND DDABAL<=278093.83 THEN DDABAL_WOE= 0.06842919;

/* SAVBAL */
IF SAVBAL>= 0 AND SAVBAL<= 53.12 THEN SAVBAL_WOE= -0.0916731;
IF SAVBAL>= 53.15 AND SAVBAL<=2309.94 THEN SAVBAL_WOE= -0.0182168;
IF SAVBAL>=2310.88 AND SAVBAL<=700026.94 THEN SAVBAL_WOE= 0.15033686;

/* ATMAmt */
IF ATMAmt>= 0 AND ATMAmt<= 136.22 THEN ATMAmt_WOE= 0.04257906;
IF ATMAmt>= 136.33 AND ATMAmt<= 1613.47 THEN ATMAmt_WOE= -0.0675103;
IF ATMAmt>= 1613.5 AND ATMAmt<= 427731.26 THEN ATMAmt_WOE= 0.01343602;

/* CDBAL */
IF CDBAL = 0 THEN CDBAL_WOE=-0.16608;
IF CDBAL>=300 AND CDBAL<= 4800 THEN CDBAL_WOE= 1.17083;
IF CDBAL>=4900 AND CDBAL<= 1053900 THEN CDBAL_WOE= 1.00986;

/* MMBAL */
IF MMBAL = 0 THEN MMBAL_WOE= -0.12551;
IF MMBAL>= 940.92 AND MMBAL<=14816.66 THEN MMBAL_WOE= 1.1849;
IF MMBAL>=14816.96 AND MMBAL<= 120801.11 THEN MMBAL_WOE=0.83537;

/* AGE */
IF AGE = . THEN AGE_WOE = 0.021595;
IF AGE>= 16 AND AGE<= 43 THEN AGE_WOE= -0.007097279;
IF AGE>= 44 AND AGE <= 55 THEN AGE_WOE= 0.003062297;
IF AGE>= 56 AND AGE <= 94 THEN AGE_WOE= 0.002128133;

/* DEP */
IF DEP>= 0 AND DEP <= 1 THEN DEP_WOE= 0.06248259;
IF DEP>= 2 AND DEP <= 3 THEN DEP_WOE= -0.0246289;
IF DEP>= 4 AND DEP <= 28 THEN DEP_WOE= -0.0454841;

/* DEPAMT */
IF DEPAMT>= 0 AND DEPAMT <= 730.5 THEN DEPAMT_WOE= 0.02288863;
IF DEPAMT>= 730.57 AND DEPAMT <= 2942.94 THEN DEPAMT_WOE= -0.0360238;
IF DEPAMT>= 2943.27 AND DEPAMT <= 484893.67 THEN DEPAMT_WOE= 0.01595843;

/* PHONE */
IF PHONE=. THEN PHONE_WOE=-0.44204;
IF PHONE= 0 THEN PHONE_WOE=0.17858;
IF PHONE>= 1 AND PHONE<=30 THEN PHONE_WOE=-0.052335621;
RUN;

/* MISSING VALUES TREATMENT IS DONE FOR CATEGORICAL & CONTINOUS VARIABLES. */

/* PART 3: Check missing values for binary variables*/
PROC MEANS DATA= LOGISTIC.CROSS NMISS; 
VAR 
DDA 
DirDep
NSF Sav ATM CD IRA LOC ILS MM MTG CC SDB HMOwn Moved InArea Ins Inv; 
RUN;

/* CHECKING THE CORRELATION BETWEEN THE VARIABLES */
ODS HTML FILE= "C:\Documents and Settings\STD\Desktop\SAS PROJECT\CORRELATION.XLS";
PROC CORR DATA=LOGISTIC.DEV; 
VAR 
INS
DDABAL_WOE SAVBAL_WOE ATMAmt_WOE CDBAL_WOE MMBAL_WOE AGE_WOE DEP_WOE DEPAMT_WOE PHONE_WOE
/*Binary Variables*/
DIRDEP NSF DDA Sav ATM CD MM MOVED LOC SDB IRA MTG ILS InArea ;
WITH
INS DDABAL_WOE SAVBAL_WOE ATMAmt_WOE CDBAL_WOE MMBAL_WOE AGE_WOE DEP_WOE DEPAMT_WOE PHONE_WOE 
/*Binary Variables*/
DIRDEP NSF DDA Sav ATM CD MM MOVED LOC SDB IRA MTG ILS InArea ;
RUN;
ODS HTML CLOSE;


/* HENCE THE MISSING VALUE FOUND IN 3 BINARY INDEPENDENT VARIABLES : 
CC = 4133
HMOWN =  5533 & INV = 4133 ; SINCE, THE MISSING VALUES CAN BE TREATED ONLY IF THEY REPRESENT LESS THAN 2-3% OF THE DATA. 
HERE, IT IS MORE THAN 10%.
HENCE, THESE 3 VARIABLES CANNOT BE CONSIDERED FOR MODELING=> NO MISSING VALUE TREATMENT IS REQUIRED. */


/* STEP 4:  DIVIDING THE DATASET INTO DEV AND VAL DATASETS */
DATA Logistic.DEV Logistic.VAL;
SET Logistic.Cross;
IF RANUNI(1000)<= 0.7 THEN OUTPUT Logistic.DEV;
ELSE OUTPUT Logistic.VAL;
RUN;


/* -------------------FITTING THE MODEL FOR DEV DATASET--------------------*/

/* MULTICOLLINEARITY CHECK - ELIMINATING VARIABLES BASED ON VIF VALUES */
ODS HTML FILE="C:\Documents and Settings\STD\Desktop\SAS PROJECT\REG_DEV.XLS";
PROC REG DATA=logistic.Dev;
MODEL INS= 
DDABAL_WOE
SAVBAL_WOE 
MMBAL_WOE 
CDBAL_WOE 
/* AGE_WOE	*/
PHONE_WOE
ATMAmt_WOE
DEP_WOE
/*Binary Variables*/
DIRDEP /* NSF DDA Sav ATM CD MM MOVED LOC MTG ILS SDB */IRA InArea 
/ VIF COLLIN; RUN;
ODS HTML CLOSE;

/* P-VALUE CHECK - ELIMINATING VARIABLES BASED ON HIGHER P VALUES */

ODS HTML FILE="C:\Documents and Settings\STD\Desktop\SAS PROJECT\LOGISTIC_DEV.XLS";
PROC LOGISTIC DATA=logistic.Dev DESCENDING;
MODEL INS= 
DDABAL_WOE
SAVBAL_WOE 
MMBAL_WOE 
CDBAL_WOE
PHONE_WOE
ATMAmt_WOE
DEP_WOE
/*Binary Variables*/
DIRDEP IRA InArea 
/LACKFIT RSQ;  /* H.L test*/
OUTPUT OUT = logistic.OUT P = PRED;
QUIT;
RUN;
ODS HTML CLOSE;

/* CHECKING FOR THE RANK ORDERING IN THE KS STATISITCS TABLE */
ODS HTML FILE="C:\Documents and Settings\STD\Desktop\SAS PROJECT\KSTAT_DEV.XLS";
%ksgcf(logistic.OUT,PRED,INS,10,RO);
ODS HTML CLOSE;

/* DIVERGENCE */
DATA logistic.OUT;
SET logistic.OUT;
SCORE = ROUND(PRED*1000);
RUN;


/* DIVERGENCE TEST */
ODS HTML FILE = "C:\Documents and Settings\STD\Desktop\SAS PROJECT\DIVERGENCE_DEV.XLS";
PROC TTEST DATA = logistic.OUT;
VAR SCORE;
CLASS INS;
RUN;
ODS HTML CLOSE;

/**************************** WORKING WITH THE VALIDATION DATASET (Logistic.VAL) /******************************************************/

/* -------------------FITTING THE MODEL FOR VAL DATASET--------------------*/

/* MULTICOLLINEARITY CHECK - ELIMINATING VARIABLES BASED ON VIF VALUES */
ODS HTML FILE="C:\Documents and Settings\STD\Desktop\SAS PROJECT\REG_VAL.XLS";
PROC REG DATA=logistic.VAL;
MODEL INS= 
DDABAL_WOE
SAVBAL_WOE 
MMBAL_WOE 
CDBAL_WOE 
/* AGE_WOE	*/
PHONE_WOE
ATMAmt_WOE
DEP_WOE
/*Binary Variables*/
DIRDEP /* NSF DDA Sav ATM CD MM MOVED LOC MTG ILS*/IRA InArea 
/ VIF COLLIN; RUN;
ODS HTML CLOSE;

/* P-VALUE CHECK - ELIMINATING VARIABLES BASED ON HIGHER P VALUES */

ODS HTML FILE="C:\Documents and Settings\STD\Desktop\SAS PROJECT\LOGISTIC_VAL.XLS";
PROC LOGISTIC DATA=logistic.VAL DESCENDING;
MODEL INS= 
DDABAL_WOE
SAVBAL_WOE 
MMBAL_WOE 
CDBAL_WOE
PHONE_WOE
ATMAmt_WOE
DEP_WOE
/*Binary Variables*/
DIRDEP IRA InArea 
/LACKFIT RSQ;  /* H.L test*/
OUTPUT OUT = logistic.OUT_VAL P = PRED_VAL;
QUIT;
RUN;
ODS HTML CLOSE;
/*
After running the code on Validation data => 
Scoring by Using MLE table from PROC Logistic of development data to get the coefficients. */

/*SCORING*/
DATA logistic.VAL1;
SET logistic.VAL;
/*L = A+B1X1+B2X2+...+BKXK;*/
L= -0.3004 + DDABal_WOE* 5.9539+ SAVBAL_WOE* 6.6126+ MMBAL_WOE*0.9256 + CDBAL_WOE*0.7414+PHONE_WOE*1.0805+
ATMAMT_WOE* 2.9446 +DEP_WOE*2.2325 + DIRDEP*(-0.2358)+
IRA*0.4829+ INAREA*(-0.2881);
PE = EXP(L)/(1+EXP(L));
RUN;

/* CHECKING IF RANK IS SATISFACTORY */
ODS HTML FILE = "C:\Documents and Settings\STD\Desktop\SAS PROJECT\KSTAT_VAL2.xls";
%KSGCF(LOGISTIC.VAL1,PE,INS,10,RO);run;
ODS HTML CLOSE;

/* RANK IS SATISFACTORY WITH 40.2 KS STATISTICS AND 0.2530 GINI MEASURE */

/* ---------==> HENCE THE MODEL IS BUILT AND VERIFIED-----*/



/*##################################################----END OF THE CODE------#############################################################*/






